--- a/elf/ldd.bash.in
+++ b/elf/ldd.bash.in
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/bin/sh
 # Copyright (C) 1996-2024 Free Software Foundation, Inc.
 # This file is part of the GNU C Library.
 
@@ -35,16 +35,16 @@
   case "$1" in
   --vers | --versi | --versio | --version)
     echo 'ldd @PKGVERSION@@VERSION@'
-    printf $"Copyright (C) %s Free Software Foundation, Inc.
+    printf "Copyright (C) %s Free Software Foundation, Inc.
 This is free software; see the source for copying conditions.  There is NO
 warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 " "2024"
-    printf $"Written by %s and %s.
+    printf "Written by %s and %s.
 " "Roland McGrath" "Ulrich Drepper"
     exit 0
     ;;
   --h | --he | --hel | --help)
-    echo $"Usage: ldd [OPTION]... FILE...
+    echo "Usage: ldd [OPTION]... FILE...
       --help              print this help and exit
       --version           print version information and exit
   -d, --data-relocs       process data relocations
@@ -52,7 +52,7 @@
   -u, --unused            print unused direct dependencies
   -v, --verbose           print all information
 "
-    printf $"For bug reporting instructions, please see:\\n%s.\\n" \
+    printf "For bug reporting instructions, please see:\\n%s.\\n" \
       "@REPORT_BUGS_TO@"
     exit 0
     ;;
@@ -77,7 +77,7 @@
     shift
     ;;
   --v | --ve | --ver)
-    echo >&2 $"ldd: option \`$1' is ambiguous"
+    echo >&2 "ldd: option \`$1' is ambiguous"
     exit 1
     ;;
   --)		# Stop option processing.
@@ -85,7 +85,7 @@
     ;;
   -*)
     echo >&2 'ldd:' $"unrecognized option" "\`$1'"
-    echo >&2 $"Try \`ldd --help' for more information."
+    echo >&2 "Try \`ldd --help' for more information."
     exit 1
     ;;
   *)
@@ -121,8 +121,8 @@
 
 case $# in
 0)
-  echo >&2 'ldd:' $"missing file arguments"
-  echo >&2 $"Try \`ldd --help' for more information."
+  echo >&2 'ldd:' "missing file arguments"
+  echo >&2 "Try \`ldd --help' for more information."
   exit 1
   ;;
 1)
@@ -144,13 +144,13 @@
      ;;
   esac
   if test ! -e "$file"; then
-    echo "ldd: ${file}:" $"No such file or directory" >&2
+    echo "ldd: ${file}:" "No such file or directory" >&2
     result=1
   elif test ! -f "$file"; then
-    echo "ldd: ${file}:" $"not regular file" >&2
+    echo "ldd: ${file}:" "not regular file" >&2
     result=1
   elif test -r "$file"; then
-    test -x "$file" || echo 'ldd:' $"\
+    test -x "$file" || echo 'ldd:' "\
 warning: you do not have execution permission for" "\`$file'" >&2
     RTLD=
     ret=1
@@ -167,7 +167,7 @@
     1)
       # This can be a non-ELF binary or no binary at all.
       nonelf "$file" || {
-	echo $"	not a dynamic executable" >&2
+	echo "	not a dynamic executable" >&2
 	result=1
       }
       ;;
@@ -175,12 +175,12 @@
       try_trace "$RTLD" "$file" || result=1
       ;;
     *)
-      echo 'ldd:' ${RTLD} $"exited with unknown exit code" "($ret)" >&2
+      echo 'ldd:' ${RTLD} "exited with unknown exit code" "($ret)" >&2
       exit 1
       ;;
     esac
   else
-    echo 'ldd:' $"error: you do not have read permission for" "\`$file'" >&2
+    echo 'ldd:' "error: you do not have read permission for" "\`$file'" >&2
     result=1
   fi
 done
